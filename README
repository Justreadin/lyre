# 🚀 Lyre Chat Application

[![Node.js](https://img.shields.io/badge/Node.js-v16+-green?logo=node.js&style=for-the-badge)](https://nodejs.org/) 
[![MySQL](https://img.shields.io/badge/MySQL-8.0-blue?logo=mysql&style=for-the-badge)](https://www.mysql.com/) 
[![Express](https://img.shields.io/badge/Express.js-4.x-yellow?logo=express&style=for-the-badge)](https://expressjs.com/)
[![License](https://img.shields.io/badge/License-MIT-blue?style=for-the-badge)](LICENSE)

---

## 🎯 **Overview**

Lyre Chat is a **full-stack**, **real-time chat app** featuring an integrated **AI-powered chatbot** — built with **Node.js**, **Express**, and **MySQL**.

This app provides:

- 🔐 Secure authentication (JWT & bcrypt)
- 💬 Real-time messaging between users
- 🤖 Intelligent chatbot with dynamic responses
- 📱 Fully responsive UI for desktop & mobile

🔗 **Live Demo:** [https://032d-102-89-46-251.ngrok-free.app](https://032d-102-89-46-251.ngrok-free.app)

---

## ✨ **Features**

| Feature                      | Description                                      | Status  |
|------------------------------|------------------------------------------------|---------|
| 🤖 Chatbot                   | Automated AI-based conversational responses    | ✅ Ready |
| 💬 Real-Time Messaging       | Instant user-to-user chat with history stored  | ✅ Ready |
| 🔐 Secure Auth               | JWT tokens, password hashing with bcrypt       | ✅ Ready |
| 🗂 Contact Management        | Add, archive, unarchive contacts                | ✅ Ready |
| 📲 Responsive UI             | Works beautifully on mobile & desktop          | ✅ Ready |

---

## 🛠 **Tech Stack**

| Backend              | Frontend         | Database    | Security            |
|----------------------|------------------|-------------|---------------------|
| Node.js (v16+)       | HTML, CSS, JS    | MySQL 8.0   | bcrypt & JWT        |
| Express.js           | Responsive Design|             | Middleware Auth     |

---

## ⚙️ **Installation**

### Prerequisites

- Node.js v16+
- MySQL Server
- ngrok (optional, for external access)

### Setup

```bash
# Clone the repo
git clone <repository_url>
cd <repository_folder>

# Install dependencies
npm install

# Setup environment variables (.env)
DB_HOST=localhost
DB_USER=<mysql_user>
DB_PASS=<mysql_password>
DB_NAME=<database_name>
DB_PORT=3306
SECRET_KEY=<jwt_secret>

# Import DB schema
mysql -u <user> -p <database_name> < database/schema.sql

# Run server
node nodeserver.js

# Optional: expose with ngrok
ngrok http 1800


---

📡 API Endpoints

Endpoint	Method	Description	Auth Required

/api/auth/signup	POST	Register a new user	No
/api/auth/login	POST	Authenticate user, return JWT	No
/api/users/upload-profile-picture	POST	Upload user profile picture	Yes
/api/users/profile-picture	GET	Get profile picture	Yes
/api/contacts	POST	Add a new contact	Yes
/api/contacts	GET	Get all contacts	Yes
/api/archived	POST	Archive contact	Yes
/api/archived	GET	Get archived contacts	Yes
/api/unarchive	POST	Unarchive a contact	Yes
/api/messages	POST	Send message	Yes
/api/messages/:contactId	GET	Get messages with a contact	Yes
/api/messages/read/:contactId	PUT	Mark messages as read	Yes
/api/feedback	POST	Submit feedback	No



---

🎨 Project Structure

root/
├── Public/                  # Frontend assets (CSS, JS, Templates)
├── database/                # SQL schema and seeds
├── nodeserver.js            # Backend server
├── package.json             # Dependencies
├── .env                     # Environment variables
└── README.md                # This file


---

🚀 Usage

Register or login

Chat with other users or the chatbot

Manage contacts and message statuses

Admins have dashboard controls



---

🛠️ Future Plans

Enhanced AI chatbot with NLP capabilities

File sharing in chat

Push notifications

Group chat support

User profile editing



---

📞 Contact

Questions? Reach me at:

Email: dave.400g@gmail.com

Phone: +234 904 138 5402



---

Made with ❤️ and Node.js
